initscript {
    dependencies {
        classpath files('lib/LibMongoLatestVersionResolver.jar')
        classpath files('lib/LibMongoUtilities.jar')
        classpath files('lib/mongo-java-driver.jar')
        classpath files('lib/LibWorkflow.jar')
        classpath files('lib/tooling-classes.jar')
    }
}


apply plugin: LatestDependencyPlugin

import fr.synchrotron.soleil.ica.tools.gradle.distrib.MavenVersionResolver;

class LatestDependencyPlugin implements Plugin<Gradle> {

    def configMongo = [
            mongoHost  : '127.0.0.1',
            mongoPort  : '27017',
            mongoDbName: 'repo'
    ]

    void apply(Gradle gradle) {

        gradle.allprojects { project ->

            configurations.all {
                resolutionStrategy.eachDependency {
                    DependencyResolveDetails details ->
                        String requestedVersion = details.requested.version;
                        if (requestedVersion.startsWith("latest")) {
                            def group = details.requested.group
                            def name = details.requested.name
                            println "getting " + group + name + "-" + requestedVersion
                            MavenVersionResolver resolver = new MavenVersionResolver(configMongo);
                            println "resolver " + resolver
                            def latestVersion = resolver.getLatestVersion(group, name)
                            logger.lifecycle("Resolved latest dependency $group:$name:$requestedVersion to $latestVersion \n")
                            details.useVersion latestVersion
                        }
                }
            }
        }
    }
}