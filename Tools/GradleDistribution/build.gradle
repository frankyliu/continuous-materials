apply plugin: 'base'

defaultTasks 'distInitDir'

ext {
    gradleVersion = '1.11'
    gradleDownloadBase = "http://services.gradle.org/distributions"
}

configurations {
    initDir
}

dependencies {
    initDir project(':Libs/LibMongoLatestMavenVersionResolver')
    initDir project(':Libs/LibMongoUtilities')
    initDir "org.mongodb:mongo-java-driver:$mongoJavaDriverVerison"
}

task buildInitDir(type: Copy) {
    into("$buildDir/init.d")
    from('src/init.d') {
        include "**/*.gradle"
    }
    into("lib") {
        from configurations.initDir
        rename '(.*)-(.*).jar', '$1.jar'
    }
}

task distInitDir(type: Zip, dependsOn: buildInitDir) {
    baseName = 'init.d'
    from buildInitDir
}

task downloadGradleDistrib(type: DownloadGradle) {
    description 'Download the original Gradle distribution from Gradle distributions website'
    gradleVersion project.gradleVersion
    gradleDownloadBase project.gradleDownloadBase
    destinationDir file("$buildDir/gradle-downloads")
}

task buildCustomGradleDistrib(type: Zip, dependsOn: downloadGradleDistrib) {
    description 'Build a custom Gradle distribution wtih custom init.d directory'
    baseName = 'custom-gradle'
    classifier = 'bin'
    from zipTree(downloadGradleDistrib.destinationFile)
    into("${downloadGradleDistrib.distributionNameBase}") {
        into('init.d') {
            from buildInitDir
        }
    }
}

class DownloadGradle extends DefaultTask {

    @Input
    String gradleVersion

    @Input
    File destinationDir

    @Input
    String gradleDownloadBase

    @TaskAction
    doDownloadGradle() {
        destinationFile.bytes = new URL(downloadUrl).bytes
    }

    String getDownloadUrl() {
        return "$gradleDownloadBase/$downloadFileName"
    }

    String getDistributionNameBase() {
        return "gradle-$gradleVersion"
    }

    String getDownloadFileName() {
        return "$distributionNameBase-bin.zip"
    }

    @OutputFile
    File getDestinationFile() {
        return new File(destinationDir, downloadFileName)
    }
}


